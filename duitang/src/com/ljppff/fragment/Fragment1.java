package com.ljppff.fragment;import java.util.ArrayList;import java.util.List;import com.ljppff.duitang.R;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.app.FragmentStatePagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RadioGroup.OnCheckedChangeListener;public class Fragment1 extends Fragment {   	private SectionsPagerAdapter mSectionsPagerAdapter;	private ViewPager mViewPager;	List<Fragment> list = null;	private View parentView;	private RadioGroup radioGroup;	private RadioButton rbTongZhi;	private RadioButton rbDongTai;	private ViewPager vp;	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment1, container, false);		radioGroup = (RadioGroup) parentView.findViewById(R.id.radioGroup);		rbTongZhi = (RadioButton) parentView.findViewById(R.id.rbTongZhi);		rbDongTai = (RadioButton) parentView.findViewById(R.id.rbDongTai);		vp=(ViewPager)parentView.findViewById(R.id.viewpagerHuDong);				list = new ArrayList<Fragment>();		Fragment1a tzf=new Fragment1a();		Fragment1b dtf=new Fragment1b();		list.add(tzf);		list.add(dtf);				ZxzcAdapter zxzc = new ZxzcAdapter(getChildFragmentManager(), list);		vp.setAdapter(zxzc);		zxzc.notifyDataSetChanged();				radioGroup.setOnCheckedChangeListener(new OnCheckedChangeListener() {						@Override			public void onCheckedChanged(RadioGroup group, int cheakedId) {				if (cheakedId == rbTongZhi.getId()) {					vp.setCurrentItem(0);				} else if (cheakedId == rbDongTai.getId()) {					vp.setCurrentItem(1);				}										}		});		rbTongZhi.setChecked(true);										//ÊªëÂä®ÂàáÊç¢		vp.setOnPageChangeListener(new OnPageChangeListener() {					@Override			public void onPageSelected(int arg0) {				switch (arg0) {				case 0:						rbTongZhi.setChecked(true);									break;				case 1:					rbDongTai.setChecked(true);					break;				}			}			@Override			public void onPageScrolled(int arg0, float arg1, int arg2) {			}			@Override			public void onPageScrollStateChanged(int arg0) {			}		});					return parentView;																				/*		View view =inflater.inflate(R.layout.fragment1, container, false);				mSectionsPagerAdapter = new SectionsPagerAdapter(getChildFragmentManager()); // Set up the ViewPager with the sections adapter.          mViewPager = (ViewPager)view. findViewById(R.id.pager);         mViewPager.setAdapter(mSectionsPagerAdapter);				return view;				*/	}			class ZxzcAdapter extends FragmentStatePagerAdapter {		   				List<Fragment> list;					public ZxzcAdapter(FragmentManager fm,List<Fragment> list) {			super(fm);			this.list=list;					}		@Override		public Fragment getItem(int arg0) {						return list.get(arg0);		}		@Override		public int getCount() {					return list.size();		}	}							public class SectionsPagerAdapter extends FragmentPagerAdapter {		         public SectionsPagerAdapter(FragmentManager fm) {            super(fm);        }         @Override        public Fragment getItem(int position) {            // getItem is called to instantiate the fragment for the given page.            // Return a DummySectionFragment (defined as a static inner class            // below) with the page number as its lone argument        	Fragment fragment = null;        	if(position==0){                 fragment = new Fragment1a();             	}else{        		fragment =new Fragment1b();        	}            return fragment;        }         @Override        public int getCount() {            // Show 3 total pages.            return 2;        }         @Override        public CharSequence getPageTitle(int position) {            switch (position) {            case 0:                return "»»√≈";            case 1:                return "∂ØÃ¨";            }            return null;        }    }}