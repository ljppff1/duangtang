package com.ljppff.duitang;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ljppff.model.Model;import android.app.Activity;import android.content.Context;import android.graphics.Color;import android.os.Bundle;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.AdapterView.OnItemClickListener;public class ClubDetailActiivity extends Activity{	private RelativeLayout mRLintent1;	private Button tdc_back;	private ArrayList<Map<String, Object>> mainList;	private ListView mSearch_more_mainlist;	private ListView mSearch_more_morelist;	private SearchMainAdapter mainAdapter;	private SearchMoreAdapter moreAdapter;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		requestWindowFeature(Window.FEATURE_NO_TITLE);		setContentView(R.layout.clubdetail);         		initView();		initModle();		initView1();					}		private void initView1() {		mSearch_more_mainlist = (ListView) findViewById(R.id.Search_more_mainlist);		mSearch_more_morelist = (ListView) findViewById(R.id.Search_more_morelist);		mainAdapter = new SearchMainAdapter(ClubDetailActiivity.this, mainList);		mainAdapter.setSelectItem(0);		mSearch_more_mainlist.setAdapter(mainAdapter);		MainOnItemClick mainclick = new MainOnItemClick();		mSearch_more_mainlist.setOnItemClickListener(mainclick);		// mSearch_more_mainlist.setChoiceMode(ListView.CHOICE_MODE_SINGLE);//		// 一定要设置这个属性，否则ListView不会刷新		initAdapter(Model.MORELISTTXT[0]);			}	private void initAdapter(String[] array) {		moreAdapter = new SearchMoreAdapter(ClubDetailActiivity.this, array);		mSearch_more_morelist.setAdapter(moreAdapter);		moreAdapter.notifyDataSetChanged();	}	private class MainOnItemClick implements OnItemClickListener {		public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,				long arg3) {			initAdapter(Model.MORELISTTXT[arg2]);			mainAdapter.setSelectItem(arg2);			mainAdapter.notifyDataSetChanged();		}	}	class SearchMoreAdapter extends BaseAdapter {		private Context ctx;		private String[] text;		private int position = 0;		private int layout = R.layout.search_more_morelist_item;		public SearchMoreAdapter(Context ctx, String[] text) {			this.ctx = ctx;			this.text = text;		}		public SearchMoreAdapter(Context ctx, String[] text, int layout) {			this.ctx = ctx;			this.text = text;			this.layout = layout;		}		public int getCount() {			return text.length;		}		public Object getItem(int arg0) {			return text[arg0];		}		public long getItemId(int arg0) {			return arg0;		}		public View getView(int arg0, View arg1, ViewGroup arg2) {			Holder hold;			if (arg1 == null) {				hold = new Holder();				arg1 = View.inflate(ctx, layout, null);				hold.txt = (TextView) arg1						.findViewById(R.id.Search_more_moreitem_txt);				hold.layout = (LinearLayout) arg1						.findViewById(R.id.More_list_lishi);				arg1.setTag(hold);			} else {				hold = (Holder) arg1.getTag();			}			hold.txt.setText(text[arg0]);			hold.layout.setBackgroundResource(R.drawable.my_list_txt_background);			hold.txt.setTextColor(Color.parseColor("#FF666666"));			if (arg0 == position) {				hold.layout						.setBackgroundResource(R.drawable.search_more_morelisttop_bkg);				hold.txt.setTextColor(Color.parseColor("#FFFF8C00"));			}			return arg1;		}		public void setSelectItem(int i) {			position = i;		}		private  class Holder {			LinearLayout layout;			TextView txt;		}	}	 class SearchMainAdapter extends BaseAdapter {			private Context ctx;			private List<Map<String, Object>> list;			private int position = 0;			private boolean islodingimg = true;			private int layout = R.layout.search_more_mainlist_item;			public SearchMainAdapter(Context ctx, List<Map<String, Object>> list) {				this.ctx = ctx;				this.list = list;			}			public SearchMainAdapter(Context ctx, List<Map<String, Object>> list,					int layout, boolean islodingimg) {				this.ctx = ctx;				this.list = list;				this.layout = layout;				this.islodingimg = islodingimg;			}			public int getCount() {				return list.size();			}			public Object getItem(int arg0) {				return list.get(arg0);			}			public long getItemId(int arg0) {				return arg0;			}			public View getView(int arg0, View arg1, ViewGroup arg2) {				Holder hold;				if (arg1 == null) {					hold = new Holder();					arg1 = View.inflate(ctx, layout, null);					hold.txt = (TextView) arg1							.findViewById(R.id.Search_more_mainitem_txt);					hold.img = (ImageView) arg1							.findViewById(R.id.Search_more_mainitem_img);					hold.layout = (LinearLayout) arg1							.findViewById(R.id.Search_more_mainitem_layout);					arg1.setTag(hold);				} else {					hold = (Holder) arg1.getTag();				}				if(islodingimg == true){					hold.img.setImageResource(Integer.parseInt(list.get(arg0).get("img")							.toString()));				}				hold.txt.setText(list.get(arg0).get("txt").toString());				hold.layout						.setBackgroundResource(R.drawable.search_more_mainlistselect);				if (arg0 == position) {					hold.layout.setBackgroundResource(R.drawable.list_bkg_line_u);				}				return arg1;			}			public void setSelectItem(int i) {				position = i;			}			public int getSelectItem() {				return position;			}			private  class Holder {				LinearLayout layout;				ImageView img;				TextView txt;			}		}	private void initModle() {		mainList = new ArrayList<Map<String, Object>>();		for (int i = 0; i < Model.LISTVIEWTXT.length; i++) {			Map<String, Object> map = new HashMap<String, Object>();			map.put("img", Model.image1[i]);			map.put("txt", Model.LISTVIEWTXT[i]);			mainList.add(map);		}	}	private void initView() {		tdc_back = (Button)this.findViewById(R.id.tdc_back);		tdc_back.setOnClickListener(listener);					}	OnClickListener listener =new OnClickListener() {				@Override		public void onClick(View v) {			switch (v.getId()) {			case R.id.tdc_back:				finish();				break;			default:				break;			}		}	};}